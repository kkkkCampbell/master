#!/bin/sh

# OPENWRT_FULL_BACKUP

clear
echo "(v0.4.1)"
sleep 2
clear
ksmbd_otkaz=0

# Проверяем, установлен ли ksmbd
if ! opkg list-installed | grep -q '^ksmbd-server'; then
    # Задаем вопрос об установке
    printf "Установить ksmbd для доступа к роутеру по сети? (\033[1;32mY\033[0m/\033[0mn): "
    read answer

    # Обрабатываем ответ (по умолчанию Y)
    case "${answer:-Y}" in
        [Yy]*) 
            echo "Устанавливаем ksmbd..."
            opkg update
            opkg install luci-i18n-ksmbd-ru ksmbd-avahi-service
            ;;
        *)
            echo "Установка ksmbd отклонена."
            ksmbd_otkaz=1  # Записываем в переменную "отказ"
			sleep 2
            ;;
    esac
fi

if ! opkg list-installed | grep -q '^tar'; then
	echo Устанавливаем полную версию tar
	echo ================================
	echo
	opkg update
	opkg install tar
fi


# формируем скрипт очистки осиротевших пакетов

CLEANUP_SCRIPT="/etc/opkg_cleanup_$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c8).sh" && cat > "$CLEANUP_SCRIPT" << 'EOF' && chmod +x "$CLEANUP_SCRIPT" && (sed -i '/^exit 0$/d;/^$/d' /etc/rc.local 2>/dev/null; echo "$CLEANUP_SCRIPT" >> /etc/rc.local; echo "exit 0" >> /etc/rc.local; chmod +x /etc/rc.local)
#!/bin/sh
# Удаляем старые следы (если скрипт прерывался ранее)
sed -i '/^exit 0$/d;/^$/d' /etc/rc.local 2>/dev/null

# Основная очистка opkg
grep "^Package: " /usr/lib/opkg/status | cut -d' ' -f2 | while read -r pkg; do
    [ ! -f "/usr/lib/opkg/info/$pkg.list" ] && 
    sed -i "/^Package: $pkg$/,/^$/d" /usr/lib/opkg/status
done
opkg update

# Чистим себя из rc.local и возвращаем exit 0
sed -i "\|$(basename "$0")|d" /etc/rc.local
echo "exit 0" >> /etc/rc.local
rm -f "$0"
EOF


clear
echo Создаём архив. Пожалуйста, подождите две минуты, процесс идёт...
echo =================================================================
FIRMWARE_VERSION=$(cat /etc/openwrt_release | grep 'DISTRIB_DESCRIPTION' | cut -d "'" -f 2 | tr ' ' '_')
SYS_ARCHIVE_FILENAME="fullbackup_${FIRMWARE_VERSION}_$(date +'%Y-%m-%d_%H.%M')"
SHARE_NAME="owrt_archive"
OUTPUT_DIRECTORY="/tmp/archive/"

# Цвета
YELLOW='\033[1;33m'
GREEN='\033[1;32m'
NC='\033[0m'

mkdir -p $OUTPUT_DIRECTORY
chmod 777 $OUTPUT_DIRECTORY

# Создаём итоговый архив
echo Сжимаем файлы
tar -czpf "$OUTPUT_DIRECTORY$SYS_ARCHIVE_FILENAME.tar.gz" \
    --preserve-permissions \
    --same-owner \
    --exclude='/overlay/work' \
    --exclude='/overlay/upper/run' \
    --exclude='/overlay/upper/etc/os-release' \
    --exclude='/overlay/upper/usr/lib/os-release' \
    /overlay 2>/dev/null

if [ "$ksmbd_otkaz" != "1" ]; then
	# Создаём, или обновляем пользователя
	KSMBD_USER="RR"
	KSMBD_PASSWORD="12345"
	ksmbd.adduser $KSMBD_USER -p $KSMBD_PASSWORD >/dev/null

	# Ищем шару
	UCI_SHARE_INDEX=""

	for i in $(uci show ksmbd | grep '=share' | cut -d[ -f2 | cut -d] -f1); do
		if uci get ksmbd.@share[$i].name >/dev/null 2>&1; then
			NAME=$(uci get ksmbd.@share[$i].name)
			if [ "$NAME" = "$SHARE_NAME" ]; then
				UCI_SHARE_INDEX=$i
				break
			fi
		fi
	done

	if [ -z "$UCI_SHARE_INDEX" ]; then
		# Удаляем шару
		# [ -n "$UCI_SHARE_INDEX" ] && uci delete ksmbd.@share[$INDEX] && uci commit ksmbd && /etc/init.d/ksmbd restart
		# sleep 2
		echo Создаём сетевую папку
		# Создаём шару 
		uci add ksmbd share >/dev/null
		uci set ksmbd.@share[-1].name="${SHARE_NAME}"
		uci set ksmbd.@share[-1].path="$OUTPUT_DIRECTORY"
		uci set ksmbd.@share[-1].guest_ok="yes"
		uci set ksmbd.@share[-1].read_only="no"
		uci set ksmbd.@share[-1].create_mask="0777"
		uci set ksmbd.@share[-1].dir_mask="0777"
		uci set ksmbd.@share[-1].users="${KSMBD_USER}"
		uci commit ksmbd
	fi
fi

# Вывод итогов
if [ "$ksmbd_otkaz" != "1" ]; then
	echo Извлекаем IP и hostname
	# Получение IP и hostname
	IP=$(ip -4 addr show br-lan | awk '/inet / {print $2}' | cut -d/ -f1)
	HOST=$(uci get system.@system[0].hostname)
	sleep 2
	/etc/init.d/ksmbd restart
        printf "\n✅ ${YELLOW}Готово! Архив доступен по адресам\n\n"
        printf "${YELLOW}\\\\\\\\%s\\\\%s${NC}\n" "$IP" "$SHARE_NAME"
        printf "${YELLOW}\\\\\\\\%s\\\\%s${NC}\n" "$HOST" "$SHARE_NAME"
	echo
	echo Если запросит пароль, ввести:
	echo Логин:  $KSMBD_USER 
	echo Пароль: $KSMBD_PASSWORD 
        echo
else
	echo
        printf "${YELLOW}Архив сохранён в папке ${GREEN}/tmp/archive ${YELLOW}на роутере и недоступен через сетевые шары.${NC}\n\n"
fi
