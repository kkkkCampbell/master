#!/bin/sh

# OPENWRT_FULL_BACKUP

clear
printf '(v0.4.1)\n'
sleep 2
clear

ksmbd_otkaz=0

# Проверяем, установлен ли ksmbd
if ! opkg list-installed | grep -q '^ksmbd-server'; then
	printf 'Установить ksmbd для доступа к роутеру по сети? (\033[1;32mY\033[0m/\033[0mn): '
	IFS= read -r answer

	# Обрабатываем ответ (по умолчанию Y)
	case "${answer:-Y}" in
		[Yy]*)
			printf 'Устанавливаем ksmbd...\n'
			opkg update
			opkg install luci-i18n-ksmbd-ru ksmbd-avahi-service
			;;
		*)
			printf 'Установка ksmbd отклонена.\n'
			ksmbd_otkaz=1
			sleep 2
			;;
	esac
fi

if ! opkg list-installed | grep -q '^tar'; then
	printf 'Устанавливаем полную версию tar\n'
	printf '================================\n\n'
	opkg update
	opkg install tar
fi

# формируем скрипт очистки осиротевших пакетов
CLEANUP_SCRIPT="/etc/opkg_cleanup_$(head /dev/urandom | tr -dc 'A-Za-z0-9' | head -c 8).sh"

cat <<'EOF' >"$CLEANUP_SCRIPT"
#!/bin/sh
# Удаляем старые следы (если скрипт прерывался ранее)
sed -i '/^exit 0$/d;/^$/d' /etc/rc.local 2>/dev/null

# Основная очистка opkg
grep "^Package: " /usr/lib/opkg/status | cut -d' ' -f2 | while read -r pkg; do
    [ ! -f "/usr/lib/opkg/info/$pkg.list" ] &&
        sed -i "/^Package: $pkg$/,/^$/d" /usr/lib/opkg/status
done
opkg update

# Чистим себя из rc.local и возвращаем exit 0
sed -i "\|$(basename "$0")|d" /etc/rc.local
echo "exit 0" >> /etc/rc.local
rm -f "$0"
EOF

chmod +x "$CLEANUP_SCRIPT"
sed -i '/^exit 0$/d;/^$/d' /etc/rc.local 2>/dev/null
{
	echo "$CLEANUP_SCRIPT"
	echo 'exit 0'
} >>/etc/rc.local
chmod +x /etc/rc.local

clear
printf 'Создаём архив. Пожалуйста, подождите две минуты, процесс идёт...\n'
printf '=================================================================\n'
FIRMWARE_VERSION=$(grep 'DISTRIB_DESCRIPTION' /etc/openwrt_release | cut -d"'" -f2 | tr ' ' '_')
SYS_ARCHIVE_FILENAME="fullbackup_${FIRMWARE_VERSION}_$(date +'%Y-%m-%d_%H.%M')"
SHARE_NAME='owrt_archive'
OUTPUT_DIRECTORY='/tmp/archive/'

# Цвета
YELLOW='\033[1;33m'
GREEN='\033[1;32m'
NC='\033[0m'

mkdir -p "$OUTPUT_DIRECTORY"
chmod 777 "$OUTPUT_DIRECTORY"

printf 'Сжимаем файлы\n'
tar -czpf "${OUTPUT_DIRECTORY}${SYS_ARCHIVE_FILENAME}.tar.gz" \
	--preserve-permissions \
	--same-owner \
	--exclude='/overlay/work' \
	--exclude='/overlay/upper/run' \
	--exclude='/overlay/upper/etc/os-release' \
	--exclude='/overlay/upper/usr/lib/os-release' \
	/overlay 2>/dev/null

if [ "$ksmbd_otkaz" != '1' ]; then
	# Создаём, или обновляем пользователя
	KSMBD_USER='RR'
	KSMBD_PASSWORD='12345'
	ksmbd.adduser "$KSMBD_USER" -p "$KSMBD_PASSWORD" >/dev/null

	# Ищем шару
	UCI_SHARE_INDEX=''
	share_indexes=$(uci show ksmbd 2>/dev/null | sed -n 's/^ksmbd\.@share\[\([0-9]\+\)\]=share$/\1/p')

	if [ -n "$share_indexes" ]; then
		for idx in $share_indexes; do
			if uci get "ksmbd.@share[$idx].name" >/dev/null 2>&1; then
				NAME=$(uci get "ksmbd.@share[$idx].name")
				if [ "$NAME" = "$SHARE_NAME" ]; then
					UCI_SHARE_INDEX=$idx
					break
				fi
			fi
		done
	fi

	if [ -z "$UCI_SHARE_INDEX" ]; then
		printf 'Создаём сетевую папку\n'
		uci add ksmbd share >/dev/null
		uci set ksmbd.@share[-1].name="$SHARE_NAME"
		uci set ksmbd.@share[-1].path="$OUTPUT_DIRECTORY"
		uci set ksmbd.@share[-1].guest_ok='yes'
		uci set ksmbd.@share[-1].read_only='no'
		uci set ksmbd.@share[-1].create_mask='0777'
		uci set ksmbd.@share[-1].dir_mask='0777'
		uci set ksmbd.@share[-1].users="$KSMBD_USER"
		uci commit ksmbd
	fi
fi

# Вывод итогов
if [ "$ksmbd_otkaz" != '1' ]; then
	printf 'Извлекаем IP и hostname\n'
	IP=$(ip -4 addr show br-lan | awk '/inet / {print $2}' | cut -d/ -f1)
	HOST=$(uci get system.@system[0].hostname)
	sleep 2
	/etc/init.d/ksmbd restart

	printf '\n✅ %s\n\n' "${YELLOW}Готово! Архив доступен по адресам${NC}"
	printf '%s\n' "${YELLOW}\\\\${IP}\\${SHARE_NAME}${NC}"
	printf '%s\n' "${YELLOW}\\\\${HOST}\\${SHARE_NAME}${NC}"
	printf '\nЕсли запросит пароль, ввести:\n'
	printf 'Логин:  %s\n' "$KSMBD_USER"
	printf 'Пароль: %s\n\n' "$KSMBD_PASSWORD"
else
	printf '\n%s\n\n' "${YELLOW}Архив сохранён в папке ${GREEN}/tmp/archive ${YELLOW}на роутере и недоступен через сетевые шары.${NC}"
fi
